version: "3.9"

services:
  price-poller:
    image: timzss/price-poller:latest
    container_name: price-poller
    restart: always
    env_file:
      - ./price-poller/.env
    ports:
      - "4000:4000"
    depends_on:
      - timescaledb
      - redis

  ws-server:
    image: timzss/ws-server:latest
    container_name: ws-server
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - redis

  http-backend:
    image: timzss/http-backend:latest
    container_name: http-backend
    restart: always
    env_file:
      - ./http-backend/.env
    ports:
      - "5000:5000"
    depends_on:
      - timescaledb
      - redis

  frontend:
    image: timzss/frontend:latest
    container_name: frontend
    restart: always
    env_file:
      - ./frontend/.env
    ports:
      - "3000:3000"
    depends_on:
      - http-backend
      - ws-server

  email-worker:
    image: timzss/email-worker:latest
    container_name: email-worker
    restart: always
    env_file:
      - ./workers/email-worker/.env
    depends_on:
      - redis

  timescaledb:
    image: timescale/timescaledb:2.17.0-pg15
    container_name: timescaledb
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - timescaledb-data:/var/lib/postgresql/data
      - ./price-poller/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
      - ./price-poller/dbsetup.sql:/docker-entrypoint-initdb.d/dbsetup.sql:ro

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

volumes:
  timescaledb-data:
  redis-data:
